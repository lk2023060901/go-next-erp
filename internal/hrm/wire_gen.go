// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package hrm

import (
	"github.com/google/wire"
	"github.com/lk2023060901/go-next-erp/internal/hrm/handler"
	"github.com/lk2023060901/go-next-erp/internal/hrm/repository/postgres"
	"github.com/lk2023060901/go-next-erp/internal/hrm/service"
	"github.com/lk2023060901/go-next-erp/pkg/database"
	"github.com/lk2023060901/go-next-erp/pkg/workflow"
)

// Injectors from wire.go:

// InitHRMModule initializes the HRM module
func InitHRMModule(db *database.DB, workflowEngine *workflow.Engine) (*HRMModule, error) {
	attendanceRecordRepository := postgres.NewAttendanceRecordRepository(db)
	shiftRepository := postgres.NewShiftRepository(db)
	scheduleRepository := postgres.NewScheduleRepository(db)
	attendanceRuleRepository := postgres.NewAttendanceRuleRepository(db)
	hrmEmployeeRepository := postgres.NewHRMEmployeeRepository(db)
	attendanceService := service.NewAttendanceService(attendanceRecordRepository, shiftRepository, scheduleRepository, attendanceRuleRepository, hrmEmployeeRepository)
	attendanceHandler := handler.NewAttendanceHandler(attendanceService)
	shiftService := service.NewShiftService(shiftRepository)
	shiftHandler := handler.NewShiftHandler(shiftService)
	scheduleService := service.NewScheduleService(scheduleRepository, shiftRepository, hrmEmployeeRepository, db)
	scheduleHandler := handler.NewScheduleHandler(scheduleService)
	attendanceRuleService := service.NewAttendanceRuleService(attendanceRuleRepository)
	attendanceRuleHandler := handler.NewAttendanceRuleHandler(attendanceRuleService)
	leaveTypeRepository := postgres.NewLeaveTypeRepository(db)
	leaveQuotaRepository := postgres.NewLeaveQuotaRepository(db)
	leaveRequestRepository := postgres.NewLeaveRequestRepository(db)
	leaveApprovalRepository := postgres.NewLeaveApprovalRepository(db)
	leaveService := service.NewLeaveService(db, leaveTypeRepository, leaveQuotaRepository, leaveRequestRepository, leaveApprovalRepository, workflowEngine)
	leaveHandler := handler.NewLeaveHandler(leaveService)
	overtimeRepository := postgres.NewOvertimeRepository(db)
	overtimeService := service.NewOvertimeService(db, overtimeRepository, workflowEngine)
	overtimeHandler := handler.NewOvertimeHandler(overtimeService)
	businessTripRepository := postgres.NewBusinessTripRepository(db)
	businessTripService := service.NewBusinessTripService(db, businessTripRepository, workflowEngine)
	businessTripHandler := handler.NewBusinessTripHandler(businessTripService)
	leaveOfficeRepository := postgres.NewLeaveOfficeRepository(db)
	leaveOfficeService := service.NewLeaveOfficeService(db, leaveOfficeRepository, workflowEngine)
	leaveOfficeHandler := handler.NewLeaveOfficeHandler(leaveOfficeService)
	hrmModule := &HRMModule{
		AttendanceHandler:     attendanceHandler,
		ShiftHandler:          shiftHandler,
		ScheduleHandler:       scheduleHandler,
		AttendanceRuleHandler: attendanceRuleHandler,
		LeaveHandler:          leaveHandler,
		OvertimeHandler:       overtimeHandler,
		BusinessTripHandler:   businessTripHandler,
		LeaveOfficeHandler:    leaveOfficeHandler,
	}
	return hrmModule, nil
}

// wire.go:

// ProviderSet HRM 模块的 Wire Provider Set
var ProviderSet = wire.NewSet(postgres.NewAttendanceRecordRepository, postgres.NewShiftRepository, postgres.NewScheduleRepository, postgres.NewAttendanceRuleRepository, postgres.NewHRMEmployeeRepository, postgres.NewLeaveTypeRepository, postgres.NewLeaveQuotaRepository, postgres.NewLeaveRequestRepository, postgres.NewLeaveApprovalRepository, postgres.NewOvertimeRepository, postgres.NewBusinessTripRepository, postgres.NewLeaveOfficeRepository, service.NewAttendanceService, service.NewShiftService, service.NewScheduleService, service.NewAttendanceRuleService, service.NewLeaveService, service.NewOvertimeService, service.NewBusinessTripService, service.NewLeaveOfficeService, handler.NewAttendanceHandler, handler.NewShiftHandler, handler.NewScheduleHandler, handler.NewAttendanceRuleHandler, handler.NewLeaveHandler, handler.NewOvertimeHandler, handler.NewBusinessTripHandler, handler.NewLeaveOfficeHandler)

// HRMModule represents the HRM module
type HRMModule struct {
	AttendanceHandler     *handler.AttendanceHandler
	ShiftHandler          *handler.ShiftHandler
	ScheduleHandler       *handler.ScheduleHandler
	AttendanceRuleHandler *handler.AttendanceRuleHandler
	LeaveHandler          *handler.LeaveHandler
	OvertimeHandler       *handler.OvertimeHandler
	BusinessTripHandler   *handler.BusinessTripHandler
	LeaveOfficeHandler    *handler.LeaveOfficeHandler
}
