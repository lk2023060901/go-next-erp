// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: api/notification/v1/notification.proto

package notificationv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendNotificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Title         string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Link          string                 `protobuf:"bytes,6,opt,name=link,proto3" json:"link,omitempty"`
	Priority      string                 `protobuf:"bytes,7,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendNotificationRequest) Reset() {
	*x = SendNotificationRequest{}
	mi := &file_api_notification_v1_notification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationRequest) ProtoMessage() {}

func (x *SendNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_notification_v1_notification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationRequest.ProtoReflect.Descriptor instead.
func (*SendNotificationRequest) Descriptor() ([]byte, []int) {
	return file_api_notification_v1_notification_proto_rawDescGZIP(), []int{0}
}

func (x *SendNotificationRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *SendNotificationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SendNotificationRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SendNotificationRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SendNotificationRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendNotificationRequest) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *SendNotificationRequest) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

type GetNotificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationRequest) Reset() {
	*x = GetNotificationRequest{}
	mi := &file_api_notification_v1_notification_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationRequest) ProtoMessage() {}

func (x *GetNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_notification_v1_notification_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationRequest) Descriptor() ([]byte, []int) {
	return file_api_notification_v1_notification_proto_rawDescGZIP(), []int{1}
}

func (x *GetNotificationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListNotificationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	OnlyUnread    bool                   `protobuf:"varint,3,opt,name=only_unread,json=onlyUnread,proto3" json:"only_unread,omitempty"`
	Page          int32                  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotificationsRequest) Reset() {
	*x = ListNotificationsRequest{}
	mi := &file_api_notification_v1_notification_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationsRequest) ProtoMessage() {}

func (x *ListNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_notification_v1_notification_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationsRequest.ProtoReflect.Descriptor instead.
func (*ListNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_api_notification_v1_notification_proto_rawDescGZIP(), []int{2}
}

func (x *ListNotificationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListNotificationsRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ListNotificationsRequest) GetOnlyUnread() bool {
	if x != nil {
		return x.OnlyUnread
	}
	return false
}

func (x *ListNotificationsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListNotificationsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type MarkAsReadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAsReadRequest) Reset() {
	*x = MarkAsReadRequest{}
	mi := &file_api_notification_v1_notification_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsReadRequest) ProtoMessage() {}

func (x *MarkAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_notification_v1_notification_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkAsReadRequest) Descriptor() ([]byte, []int) {
	return file_api_notification_v1_notification_proto_rawDescGZIP(), []int{3}
}

func (x *MarkAsReadRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type BatchMarkAsReadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []string               `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchMarkAsReadRequest) Reset() {
	*x = BatchMarkAsReadRequest{}
	mi := &file_api_notification_v1_notification_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchMarkAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchMarkAsReadRequest) ProtoMessage() {}

func (x *BatchMarkAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_notification_v1_notification_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchMarkAsReadRequest.ProtoReflect.Descriptor instead.
func (*BatchMarkAsReadRequest) Descriptor() ([]byte, []int) {
	return file_api_notification_v1_notification_proto_rawDescGZIP(), []int{4}
}

func (x *BatchMarkAsReadRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteNotificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNotificationRequest) Reset() {
	*x = DeleteNotificationRequest{}
	mi := &file_api_notification_v1_notification_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationRequest) ProtoMessage() {}

func (x *DeleteNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_notification_v1_notification_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationRequest.ProtoReflect.Descriptor instead.
func (*DeleteNotificationRequest) Descriptor() ([]byte, []int) {
	return file_api_notification_v1_notification_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteNotificationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetUnreadCountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUnreadCountRequest) Reset() {
	*x = GetUnreadCountRequest{}
	mi := &file_api_notification_v1_notification_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnreadCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnreadCountRequest) ProtoMessage() {}

func (x *GetUnreadCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_notification_v1_notification_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnreadCountRequest.ProtoReflect.Descriptor instead.
func (*GetUnreadCountRequest) Descriptor() ([]byte, []int) {
	return file_api_notification_v1_notification_proto_rawDescGZIP(), []int{6}
}

func (x *GetUnreadCountRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type NotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Title         string                 `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	Link          string                 `protobuf:"bytes,7,opt,name=link,proto3" json:"link,omitempty"`
	Priority      string                 `protobuf:"bytes,8,opt,name=priority,proto3" json:"priority,omitempty"`
	IsRead        bool                   `protobuf:"varint,9,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	ReadAt        string                 `protobuf:"bytes,10,opt,name=read_at,json=readAt,proto3" json:"read_at,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationResponse) Reset() {
	*x = NotificationResponse{}
	mi := &file_api_notification_v1_notification_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationResponse) ProtoMessage() {}

func (x *NotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_notification_v1_notification_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationResponse.ProtoReflect.Descriptor instead.
func (*NotificationResponse) Descriptor() ([]byte, []int) {
	return file_api_notification_v1_notification_proto_rawDescGZIP(), []int{7}
}

func (x *NotificationResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NotificationResponse) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *NotificationResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *NotificationResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NotificationResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NotificationResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NotificationResponse) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *NotificationResponse) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

func (x *NotificationResponse) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *NotificationResponse) GetReadAt() string {
	if x != nil {
		return x.ReadAt
	}
	return ""
}

func (x *NotificationResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type ListNotificationsResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Items         []*NotificationResponse `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total         int32                   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotificationsResponse) Reset() {
	*x = ListNotificationsResponse{}
	mi := &file_api_notification_v1_notification_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationsResponse) ProtoMessage() {}

func (x *ListNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_notification_v1_notification_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationsResponse.ProtoReflect.Descriptor instead.
func (*ListNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_api_notification_v1_notification_proto_rawDescGZIP(), []int{8}
}

func (x *ListNotificationsResponse) GetItems() []*NotificationResponse {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListNotificationsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type BatchMarkAsReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchMarkAsReadResponse) Reset() {
	*x = BatchMarkAsReadResponse{}
	mi := &file_api_notification_v1_notification_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchMarkAsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchMarkAsReadResponse) ProtoMessage() {}

func (x *BatchMarkAsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_notification_v1_notification_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchMarkAsReadResponse.ProtoReflect.Descriptor instead.
func (*BatchMarkAsReadResponse) Descriptor() ([]byte, []int) {
	return file_api_notification_v1_notification_proto_rawDescGZIP(), []int{9}
}

func (x *BatchMarkAsReadResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *BatchMarkAsReadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteNotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNotificationResponse) Reset() {
	*x = DeleteNotificationResponse{}
	mi := &file_api_notification_v1_notification_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationResponse) ProtoMessage() {}

func (x *DeleteNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_notification_v1_notification_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationResponse.ProtoReflect.Descriptor instead.
func (*DeleteNotificationResponse) Descriptor() ([]byte, []int) {
	return file_api_notification_v1_notification_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteNotificationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UnreadCountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnreadCountResponse) Reset() {
	*x = UnreadCountResponse{}
	mi := &file_api_notification_v1_notification_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnreadCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnreadCountResponse) ProtoMessage() {}

func (x *UnreadCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_notification_v1_notification_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnreadCountResponse.ProtoReflect.Descriptor instead.
func (*UnreadCountResponse) Descriptor() ([]byte, []int) {
	return file_api_notification_v1_notification_proto_rawDescGZIP(), []int{11}
}

func (x *UnreadCountResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// SubscribeRequest WebSocket订阅请求
type SubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"` // JWT token 用于认证
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_api_notification_v1_notification_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_notification_v1_notification_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_api_notification_v1_notification_proto_rawDescGZIP(), []int{12}
}

func (x *SubscribeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SubscribeRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// NotificationMessage WebSocket消息
type NotificationMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`                                   // 消息类型: notification, ping, error
	Notification  *NotificationResponse  `protobuf:"bytes,2,opt,name=notification,proto3" json:"notification,omitempty"`                   // 通知内容
	UnreadCount   int32                  `protobuf:"varint,3,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"` // 未读数量
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`                             // 附加消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationMessage) Reset() {
	*x = NotificationMessage{}
	mi := &file_api_notification_v1_notification_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationMessage) ProtoMessage() {}

func (x *NotificationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_api_notification_v1_notification_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationMessage.ProtoReflect.Descriptor instead.
func (*NotificationMessage) Descriptor() ([]byte, []int) {
	return file_api_notification_v1_notification_proto_rawDescGZIP(), []int{13}
}

func (x *NotificationMessage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NotificationMessage) GetNotification() *NotificationResponse {
	if x != nil {
		return x.Notification
	}
	return nil
}

func (x *NotificationMessage) GetUnreadCount() int32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *NotificationMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_api_notification_v1_notification_proto protoreflect.FileDescriptor

const file_api_notification_v1_notification_proto_rawDesc = "" +
	"\n" +
	"&api/notification/v1/notification.proto\x12\x13api.notification.v1\x1a\x1cgoogle/api/annotations.proto\"\xc3\x01\n" +
	"\x17SendNotificationRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x14\n" +
	"\x05title\x18\x04 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x05 \x01(\tR\acontent\x12\x12\n" +
	"\x04link\x18\x06 \x01(\tR\x04link\x12\x1a\n" +
	"\bpriority\x18\a \x01(\tR\bpriority\"(\n" +
	"\x16GetNotificationRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x99\x01\n" +
	"\x18ListNotificationsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x1f\n" +
	"\vonly_unread\x18\x03 \x01(\bR\n" +
	"onlyUnread\x12\x12\n" +
	"\x04page\x18\x04 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x05 \x01(\x05R\bpageSize\"#\n" +
	"\x11MarkAsReadRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"*\n" +
	"\x16BatchMarkAsReadRequest\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\tR\x03ids\"+\n" +
	"\x19DeleteNotificationRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"0\n" +
	"\x15GetUnreadCountRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"\xa1\x02\n" +
	"\x14NotificationResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12\x14\n" +
	"\x05title\x18\x05 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x06 \x01(\tR\acontent\x12\x12\n" +
	"\x04link\x18\a \x01(\tR\x04link\x12\x1a\n" +
	"\bpriority\x18\b \x01(\tR\bpriority\x12\x17\n" +
	"\ais_read\x18\t \x01(\bR\x06isRead\x12\x17\n" +
	"\aread_at\x18\n" +
	" \x01(\tR\x06readAt\x12\x1d\n" +
	"\n" +
	"created_at\x18\v \x01(\tR\tcreatedAt\"r\n" +
	"\x19ListNotificationsResponse\x12?\n" +
	"\x05items\x18\x01 \x03(\v2).api.notification.v1.NotificationResponseR\x05items\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"I\n" +
	"\x17BatchMarkAsReadResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\"6\n" +
	"\x1aDeleteNotificationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"+\n" +
	"\x13UnreadCountResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\"A\n" +
	"\x10SubscribeRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\"\xb5\x01\n" +
	"\x13NotificationMessage\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12M\n" +
	"\fnotification\x18\x02 \x01(\v2).api.notification.v1.NotificationResponseR\fnotification\x12!\n" +
	"\funread_count\x18\x03 \x01(\x05R\vunreadCount\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage2\xfe\b\n" +
	"\x13NotificationService\x12\x8d\x01\n" +
	"\x10SendNotification\x12,.api.notification.v1.SendNotificationRequest\x1a).api.notification.v1.NotificationResponse\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/api/v1/notifications\x12\x8d\x01\n" +
	"\x0fGetNotification\x12+.api.notification.v1.GetNotificationRequest\x1a).api.notification.v1.NotificationResponse\"\"\x82\xd3\xe4\x93\x02\x1c\x12\x1a/api/v1/notifications/{id}\x12\x91\x01\n" +
	"\x11ListNotifications\x12-.api.notification.v1.ListNotificationsRequest\x1a..api.notification.v1.ListNotificationsResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/api/v1/notifications\x12\x8b\x01\n" +
	"\n" +
	"MarkAsRead\x12&.api.notification.v1.MarkAsReadRequest\x1a).api.notification.v1.NotificationResponse\"*\x82\xd3\xe4\x93\x02$:\x01*\x1a\x1f/api/v1/notifications/{id}/read\x12\x93\x01\n" +
	"\x0fBatchMarkAsRead\x12+.api.notification.v1.BatchMarkAsReadRequest\x1a,.api.notification.v1.BatchMarkAsReadResponse\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\x1a\x1a/api/v1/notifications/read\x12\x99\x01\n" +
	"\x12DeleteNotification\x12..api.notification.v1.DeleteNotificationRequest\x1a/.api.notification.v1.DeleteNotificationResponse\"\"\x82\xd3\xe4\x93\x02\x1c*\x1a/api/v1/notifications/{id}\x12\x92\x01\n" +
	"\x0eGetUnreadCount\x12*.api.notification.v1.GetUnreadCountRequest\x1a(.api.notification.v1.UnreadCountResponse\"*\x82\xd3\xe4\x93\x02$\x12\"/api/v1/notifications/unread-count\x12^\n" +
	"\tSubscribe\x12%.api.notification.v1.SubscribeRequest\x1a(.api.notification.v1.NotificationMessage0\x01B\xe2\x01\n" +
	"\x17com.api.notification.v1B\x11NotificationProtoP\x01ZFgithub.com/lk2023060901/go-next-erp/api/notification/v1;notificationv1\xa2\x02\x03ANX\xaa\x02\x13Api.Notification.V1\xca\x02\x13Api\\Notification\\V1\xe2\x02\x1fApi\\Notification\\V1\\GPBMetadata\xea\x02\x15Api::Notification::V1b\x06proto3"

var (
	file_api_notification_v1_notification_proto_rawDescOnce sync.Once
	file_api_notification_v1_notification_proto_rawDescData []byte
)

func file_api_notification_v1_notification_proto_rawDescGZIP() []byte {
	file_api_notification_v1_notification_proto_rawDescOnce.Do(func() {
		file_api_notification_v1_notification_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_notification_v1_notification_proto_rawDesc), len(file_api_notification_v1_notification_proto_rawDesc)))
	})
	return file_api_notification_v1_notification_proto_rawDescData
}

var file_api_notification_v1_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_notification_v1_notification_proto_goTypes = []any{
	(*SendNotificationRequest)(nil),    // 0: api.notification.v1.SendNotificationRequest
	(*GetNotificationRequest)(nil),     // 1: api.notification.v1.GetNotificationRequest
	(*ListNotificationsRequest)(nil),   // 2: api.notification.v1.ListNotificationsRequest
	(*MarkAsReadRequest)(nil),          // 3: api.notification.v1.MarkAsReadRequest
	(*BatchMarkAsReadRequest)(nil),     // 4: api.notification.v1.BatchMarkAsReadRequest
	(*DeleteNotificationRequest)(nil),  // 5: api.notification.v1.DeleteNotificationRequest
	(*GetUnreadCountRequest)(nil),      // 6: api.notification.v1.GetUnreadCountRequest
	(*NotificationResponse)(nil),       // 7: api.notification.v1.NotificationResponse
	(*ListNotificationsResponse)(nil),  // 8: api.notification.v1.ListNotificationsResponse
	(*BatchMarkAsReadResponse)(nil),    // 9: api.notification.v1.BatchMarkAsReadResponse
	(*DeleteNotificationResponse)(nil), // 10: api.notification.v1.DeleteNotificationResponse
	(*UnreadCountResponse)(nil),        // 11: api.notification.v1.UnreadCountResponse
	(*SubscribeRequest)(nil),           // 12: api.notification.v1.SubscribeRequest
	(*NotificationMessage)(nil),        // 13: api.notification.v1.NotificationMessage
}
var file_api_notification_v1_notification_proto_depIdxs = []int32{
	7,  // 0: api.notification.v1.ListNotificationsResponse.items:type_name -> api.notification.v1.NotificationResponse
	7,  // 1: api.notification.v1.NotificationMessage.notification:type_name -> api.notification.v1.NotificationResponse
	0,  // 2: api.notification.v1.NotificationService.SendNotification:input_type -> api.notification.v1.SendNotificationRequest
	1,  // 3: api.notification.v1.NotificationService.GetNotification:input_type -> api.notification.v1.GetNotificationRequest
	2,  // 4: api.notification.v1.NotificationService.ListNotifications:input_type -> api.notification.v1.ListNotificationsRequest
	3,  // 5: api.notification.v1.NotificationService.MarkAsRead:input_type -> api.notification.v1.MarkAsReadRequest
	4,  // 6: api.notification.v1.NotificationService.BatchMarkAsRead:input_type -> api.notification.v1.BatchMarkAsReadRequest
	5,  // 7: api.notification.v1.NotificationService.DeleteNotification:input_type -> api.notification.v1.DeleteNotificationRequest
	6,  // 8: api.notification.v1.NotificationService.GetUnreadCount:input_type -> api.notification.v1.GetUnreadCountRequest
	12, // 9: api.notification.v1.NotificationService.Subscribe:input_type -> api.notification.v1.SubscribeRequest
	7,  // 10: api.notification.v1.NotificationService.SendNotification:output_type -> api.notification.v1.NotificationResponse
	7,  // 11: api.notification.v1.NotificationService.GetNotification:output_type -> api.notification.v1.NotificationResponse
	8,  // 12: api.notification.v1.NotificationService.ListNotifications:output_type -> api.notification.v1.ListNotificationsResponse
	7,  // 13: api.notification.v1.NotificationService.MarkAsRead:output_type -> api.notification.v1.NotificationResponse
	9,  // 14: api.notification.v1.NotificationService.BatchMarkAsRead:output_type -> api.notification.v1.BatchMarkAsReadResponse
	10, // 15: api.notification.v1.NotificationService.DeleteNotification:output_type -> api.notification.v1.DeleteNotificationResponse
	11, // 16: api.notification.v1.NotificationService.GetUnreadCount:output_type -> api.notification.v1.UnreadCountResponse
	13, // 17: api.notification.v1.NotificationService.Subscribe:output_type -> api.notification.v1.NotificationMessage
	10, // [10:18] is the sub-list for method output_type
	2,  // [2:10] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_api_notification_v1_notification_proto_init() }
func file_api_notification_v1_notification_proto_init() {
	if File_api_notification_v1_notification_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_notification_v1_notification_proto_rawDesc), len(file_api_notification_v1_notification_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_notification_v1_notification_proto_goTypes,
		DependencyIndexes: file_api_notification_v1_notification_proto_depIdxs,
		MessageInfos:      file_api_notification_v1_notification_proto_msgTypes,
	}.Build()
	File_api_notification_v1_notification_proto = out.File
	file_api_notification_v1_notification_proto_goTypes = nil
	file_api_notification_v1_notification_proto_depIdxs = nil
}
