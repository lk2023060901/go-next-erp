// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: api/hrm/v1/overtime.proto

package hrmv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 加班记录
type OvertimeResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantId        string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	EmployeeId      string                 `protobuf:"bytes,3,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	EmployeeName    string                 `protobuf:"bytes,4,opt,name=employee_name,json=employeeName,proto3" json:"employee_name,omitempty"`
	DepartmentId    string                 `protobuf:"bytes,5,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	StartTime       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime         *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Duration        float64                `protobuf:"fixed64,8,opt,name=duration,proto3" json:"duration,omitempty"`
	OvertimeType    string                 `protobuf:"bytes,9,opt,name=overtime_type,json=overtimeType,proto3" json:"overtime_type,omitempty"` // workday, weekend, holiday
	PayType         string                 `protobuf:"bytes,10,opt,name=pay_type,json=payType,proto3" json:"pay_type,omitempty"`               // money, leave
	PayRate         float64                `protobuf:"fixed64,11,opt,name=pay_rate,json=payRate,proto3" json:"pay_rate,omitempty"`
	Reason          string                 `protobuf:"bytes,12,opt,name=reason,proto3" json:"reason,omitempty"`
	Tasks           []string               `protobuf:"bytes,13,rep,name=tasks,proto3" json:"tasks,omitempty"`
	ApprovalStatus  string                 `protobuf:"bytes,14,opt,name=approval_status,json=approvalStatus,proto3" json:"approval_status,omitempty"` // pending, approved, rejected
	ApprovedBy      string                 `protobuf:"bytes,15,opt,name=approved_by,json=approvedBy,proto3" json:"approved_by,omitempty"`
	ApprovedAt      *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=approved_at,json=approvedAt,proto3" json:"approved_at,omitempty"`
	RejectReason    string                 `protobuf:"bytes,17,opt,name=reject_reason,json=rejectReason,proto3" json:"reject_reason,omitempty"`
	CompOffDays     float64                `protobuf:"fixed64,18,opt,name=comp_off_days,json=compOffDays,proto3" json:"comp_off_days,omitempty"`
	CompOffUsed     float64                `protobuf:"fixed64,19,opt,name=comp_off_used,json=compOffUsed,proto3" json:"comp_off_used,omitempty"`
	CompOffExpireAt *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=comp_off_expire_at,json=compOffExpireAt,proto3" json:"comp_off_expire_at,omitempty"`
	Remark          string                 `protobuf:"bytes,21,opt,name=remark,proto3" json:"remark,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,23,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *OvertimeResponse) Reset() {
	*x = OvertimeResponse{}
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvertimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvertimeResponse) ProtoMessage() {}

func (x *OvertimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvertimeResponse.ProtoReflect.Descriptor instead.
func (*OvertimeResponse) Descriptor() ([]byte, []int) {
	return file_api_hrm_v1_overtime_proto_rawDescGZIP(), []int{0}
}

func (x *OvertimeResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OvertimeResponse) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *OvertimeResponse) GetEmployeeId() string {
	if x != nil {
		return x.EmployeeId
	}
	return ""
}

func (x *OvertimeResponse) GetEmployeeName() string {
	if x != nil {
		return x.EmployeeName
	}
	return ""
}

func (x *OvertimeResponse) GetDepartmentId() string {
	if x != nil {
		return x.DepartmentId
	}
	return ""
}

func (x *OvertimeResponse) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *OvertimeResponse) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *OvertimeResponse) GetDuration() float64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *OvertimeResponse) GetOvertimeType() string {
	if x != nil {
		return x.OvertimeType
	}
	return ""
}

func (x *OvertimeResponse) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

func (x *OvertimeResponse) GetPayRate() float64 {
	if x != nil {
		return x.PayRate
	}
	return 0
}

func (x *OvertimeResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *OvertimeResponse) GetTasks() []string {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *OvertimeResponse) GetApprovalStatus() string {
	if x != nil {
		return x.ApprovalStatus
	}
	return ""
}

func (x *OvertimeResponse) GetApprovedBy() string {
	if x != nil {
		return x.ApprovedBy
	}
	return ""
}

func (x *OvertimeResponse) GetApprovedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ApprovedAt
	}
	return nil
}

func (x *OvertimeResponse) GetRejectReason() string {
	if x != nil {
		return x.RejectReason
	}
	return ""
}

func (x *OvertimeResponse) GetCompOffDays() float64 {
	if x != nil {
		return x.CompOffDays
	}
	return 0
}

func (x *OvertimeResponse) GetCompOffUsed() float64 {
	if x != nil {
		return x.CompOffUsed
	}
	return 0
}

func (x *OvertimeResponse) GetCompOffExpireAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompOffExpireAt
	}
	return nil
}

func (x *OvertimeResponse) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *OvertimeResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OvertimeResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// 创建加班申请
type CreateOvertimeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	EmployeeId    string                 `protobuf:"bytes,2,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	EmployeeName  string                 `protobuf:"bytes,3,opt,name=employee_name,json=employeeName,proto3" json:"employee_name,omitempty"`
	DepartmentId  string                 `protobuf:"bytes,4,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Duration      float64                `protobuf:"fixed64,7,opt,name=duration,proto3" json:"duration,omitempty"`
	OvertimeType  string                 `protobuf:"bytes,8,opt,name=overtime_type,json=overtimeType,proto3" json:"overtime_type,omitempty"` // workday, weekend, holiday
	PayType       string                 `protobuf:"bytes,9,opt,name=pay_type,json=payType,proto3" json:"pay_type,omitempty"`                // money, leave
	Reason        string                 `protobuf:"bytes,10,opt,name=reason,proto3" json:"reason,omitempty"`
	Tasks         []string               `protobuf:"bytes,11,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Remark        string                 `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOvertimeRequest) Reset() {
	*x = CreateOvertimeRequest{}
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOvertimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOvertimeRequest) ProtoMessage() {}

func (x *CreateOvertimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOvertimeRequest.ProtoReflect.Descriptor instead.
func (*CreateOvertimeRequest) Descriptor() ([]byte, []int) {
	return file_api_hrm_v1_overtime_proto_rawDescGZIP(), []int{1}
}

func (x *CreateOvertimeRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *CreateOvertimeRequest) GetEmployeeId() string {
	if x != nil {
		return x.EmployeeId
	}
	return ""
}

func (x *CreateOvertimeRequest) GetEmployeeName() string {
	if x != nil {
		return x.EmployeeName
	}
	return ""
}

func (x *CreateOvertimeRequest) GetDepartmentId() string {
	if x != nil {
		return x.DepartmentId
	}
	return ""
}

func (x *CreateOvertimeRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *CreateOvertimeRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *CreateOvertimeRequest) GetDuration() float64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *CreateOvertimeRequest) GetOvertimeType() string {
	if x != nil {
		return x.OvertimeType
	}
	return ""
}

func (x *CreateOvertimeRequest) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

func (x *CreateOvertimeRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *CreateOvertimeRequest) GetTasks() []string {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *CreateOvertimeRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 更新加班申请
type UpdateOvertimeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Duration      float64                `protobuf:"fixed64,4,opt,name=duration,proto3" json:"duration,omitempty"`
	OvertimeType  string                 `protobuf:"bytes,5,opt,name=overtime_type,json=overtimeType,proto3" json:"overtime_type,omitempty"`
	PayType       string                 `protobuf:"bytes,6,opt,name=pay_type,json=payType,proto3" json:"pay_type,omitempty"`
	Reason        string                 `protobuf:"bytes,7,opt,name=reason,proto3" json:"reason,omitempty"`
	Tasks         []string               `protobuf:"bytes,8,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Remark        string                 `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOvertimeRequest) Reset() {
	*x = UpdateOvertimeRequest{}
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOvertimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOvertimeRequest) ProtoMessage() {}

func (x *UpdateOvertimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOvertimeRequest.ProtoReflect.Descriptor instead.
func (*UpdateOvertimeRequest) Descriptor() ([]byte, []int) {
	return file_api_hrm_v1_overtime_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateOvertimeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateOvertimeRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *UpdateOvertimeRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *UpdateOvertimeRequest) GetDuration() float64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *UpdateOvertimeRequest) GetOvertimeType() string {
	if x != nil {
		return x.OvertimeType
	}
	return ""
}

func (x *UpdateOvertimeRequest) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

func (x *UpdateOvertimeRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *UpdateOvertimeRequest) GetTasks() []string {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *UpdateOvertimeRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 删除加班申请
type DeleteOvertimeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteOvertimeRequest) Reset() {
	*x = DeleteOvertimeRequest{}
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteOvertimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOvertimeRequest) ProtoMessage() {}

func (x *DeleteOvertimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOvertimeRequest.ProtoReflect.Descriptor instead.
func (*DeleteOvertimeRequest) Descriptor() ([]byte, []int) {
	return file_api_hrm_v1_overtime_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteOvertimeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteOvertimeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteOvertimeResponse) Reset() {
	*x = DeleteOvertimeResponse{}
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteOvertimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOvertimeResponse) ProtoMessage() {}

func (x *DeleteOvertimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOvertimeResponse.ProtoReflect.Descriptor instead.
func (*DeleteOvertimeResponse) Descriptor() ([]byte, []int) {
	return file_api_hrm_v1_overtime_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteOvertimeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteOvertimeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 获取加班详情
type GetOvertimeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOvertimeRequest) Reset() {
	*x = GetOvertimeRequest{}
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOvertimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOvertimeRequest) ProtoMessage() {}

func (x *GetOvertimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOvertimeRequest.ProtoReflect.Descriptor instead.
func (*GetOvertimeRequest) Descriptor() ([]byte, []int) {
	return file_api_hrm_v1_overtime_proto_rawDescGZIP(), []int{5}
}

func (x *GetOvertimeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// 列表查询加班记录
type ListOvertimesRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TenantId       string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	EmployeeId     string                 `protobuf:"bytes,2,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	DepartmentId   string                 `protobuf:"bytes,3,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	OvertimeType   string                 `protobuf:"bytes,4,opt,name=overtime_type,json=overtimeType,proto3" json:"overtime_type,omitempty"`
	ApprovalStatus string                 `protobuf:"bytes,5,opt,name=approval_status,json=approvalStatus,proto3" json:"approval_status,omitempty"`
	StartDate      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Keyword        string                 `protobuf:"bytes,8,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Page           int32                  `protobuf:"varint,9,opt,name=page,proto3" json:"page,omitempty"`
	PageSize       int32                  `protobuf:"varint,10,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListOvertimesRequest) Reset() {
	*x = ListOvertimesRequest{}
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOvertimesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOvertimesRequest) ProtoMessage() {}

func (x *ListOvertimesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOvertimesRequest.ProtoReflect.Descriptor instead.
func (*ListOvertimesRequest) Descriptor() ([]byte, []int) {
	return file_api_hrm_v1_overtime_proto_rawDescGZIP(), []int{6}
}

func (x *ListOvertimesRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ListOvertimesRequest) GetEmployeeId() string {
	if x != nil {
		return x.EmployeeId
	}
	return ""
}

func (x *ListOvertimesRequest) GetDepartmentId() string {
	if x != nil {
		return x.DepartmentId
	}
	return ""
}

func (x *ListOvertimesRequest) GetOvertimeType() string {
	if x != nil {
		return x.OvertimeType
	}
	return ""
}

func (x *ListOvertimesRequest) GetApprovalStatus() string {
	if x != nil {
		return x.ApprovalStatus
	}
	return ""
}

func (x *ListOvertimesRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *ListOvertimesRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *ListOvertimesRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListOvertimesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListOvertimesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListOvertimesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*OvertimeResponse    `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListOvertimesResponse) Reset() {
	*x = ListOvertimesResponse{}
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOvertimesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOvertimesResponse) ProtoMessage() {}

func (x *ListOvertimesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOvertimesResponse.ProtoReflect.Descriptor instead.
func (*ListOvertimesResponse) Descriptor() ([]byte, []int) {
	return file_api_hrm_v1_overtime_proto_rawDescGZIP(), []int{7}
}

func (x *ListOvertimesResponse) GetItems() []*OvertimeResponse {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListOvertimesResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListOvertimesResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListOvertimesResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 查询员工加班记录
type ListEmployeeOvertimesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	EmployeeId    string                 `protobuf:"bytes,2,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	Year          int32                  `protobuf:"varint,3,opt,name=year,proto3" json:"year,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEmployeeOvertimesRequest) Reset() {
	*x = ListEmployeeOvertimesRequest{}
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEmployeeOvertimesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEmployeeOvertimesRequest) ProtoMessage() {}

func (x *ListEmployeeOvertimesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEmployeeOvertimesRequest.ProtoReflect.Descriptor instead.
func (*ListEmployeeOvertimesRequest) Descriptor() ([]byte, []int) {
	return file_api_hrm_v1_overtime_proto_rawDescGZIP(), []int{8}
}

func (x *ListEmployeeOvertimesRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ListEmployeeOvertimesRequest) GetEmployeeId() string {
	if x != nil {
		return x.EmployeeId
	}
	return ""
}

func (x *ListEmployeeOvertimesRequest) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

// 查询待审批的加班
type ListPendingOvertimesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPendingOvertimesRequest) Reset() {
	*x = ListPendingOvertimesRequest{}
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPendingOvertimesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPendingOvertimesRequest) ProtoMessage() {}

func (x *ListPendingOvertimesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPendingOvertimesRequest.ProtoReflect.Descriptor instead.
func (*ListPendingOvertimesRequest) Descriptor() ([]byte, []int) {
	return file_api_hrm_v1_overtime_proto_rawDescGZIP(), []int{9}
}

func (x *ListPendingOvertimesRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// 提交加班审批
type SubmitOvertimeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OvertimeId    string                 `protobuf:"bytes,1,opt,name=overtime_id,json=overtimeId,proto3" json:"overtime_id,omitempty"`
	SubmitterId   string                 `protobuf:"bytes,2,opt,name=submitter_id,json=submitterId,proto3" json:"submitter_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitOvertimeRequest) Reset() {
	*x = SubmitOvertimeRequest{}
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitOvertimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitOvertimeRequest) ProtoMessage() {}

func (x *SubmitOvertimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitOvertimeRequest.ProtoReflect.Descriptor instead.
func (*SubmitOvertimeRequest) Descriptor() ([]byte, []int) {
	return file_api_hrm_v1_overtime_proto_rawDescGZIP(), []int{10}
}

func (x *SubmitOvertimeRequest) GetOvertimeId() string {
	if x != nil {
		return x.OvertimeId
	}
	return ""
}

func (x *SubmitOvertimeRequest) GetSubmitterId() string {
	if x != nil {
		return x.SubmitterId
	}
	return ""
}

type SubmitOvertimeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitOvertimeResponse) Reset() {
	*x = SubmitOvertimeResponse{}
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitOvertimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitOvertimeResponse) ProtoMessage() {}

func (x *SubmitOvertimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitOvertimeResponse.ProtoReflect.Descriptor instead.
func (*SubmitOvertimeResponse) Descriptor() ([]byte, []int) {
	return file_api_hrm_v1_overtime_proto_rawDescGZIP(), []int{11}
}

func (x *SubmitOvertimeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SubmitOvertimeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 批准加班
type ApproveOvertimeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OvertimeId    string                 `protobuf:"bytes,1,opt,name=overtime_id,json=overtimeId,proto3" json:"overtime_id,omitempty"`
	ApproverId    string                 `protobuf:"bytes,2,opt,name=approver_id,json=approverId,proto3" json:"approver_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveOvertimeRequest) Reset() {
	*x = ApproveOvertimeRequest{}
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveOvertimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveOvertimeRequest) ProtoMessage() {}

func (x *ApproveOvertimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveOvertimeRequest.ProtoReflect.Descriptor instead.
func (*ApproveOvertimeRequest) Descriptor() ([]byte, []int) {
	return file_api_hrm_v1_overtime_proto_rawDescGZIP(), []int{12}
}

func (x *ApproveOvertimeRequest) GetOvertimeId() string {
	if x != nil {
		return x.OvertimeId
	}
	return ""
}

func (x *ApproveOvertimeRequest) GetApproverId() string {
	if x != nil {
		return x.ApproverId
	}
	return ""
}

type ApproveOvertimeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveOvertimeResponse) Reset() {
	*x = ApproveOvertimeResponse{}
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveOvertimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveOvertimeResponse) ProtoMessage() {}

func (x *ApproveOvertimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveOvertimeResponse.ProtoReflect.Descriptor instead.
func (*ApproveOvertimeResponse) Descriptor() ([]byte, []int) {
	return file_api_hrm_v1_overtime_proto_rawDescGZIP(), []int{13}
}

func (x *ApproveOvertimeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ApproveOvertimeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 拒绝加班
type RejectOvertimeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OvertimeId    string                 `protobuf:"bytes,1,opt,name=overtime_id,json=overtimeId,proto3" json:"overtime_id,omitempty"`
	ApproverId    string                 `protobuf:"bytes,2,opt,name=approver_id,json=approverId,proto3" json:"approver_id,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RejectOvertimeRequest) Reset() {
	*x = RejectOvertimeRequest{}
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RejectOvertimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectOvertimeRequest) ProtoMessage() {}

func (x *RejectOvertimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectOvertimeRequest.ProtoReflect.Descriptor instead.
func (*RejectOvertimeRequest) Descriptor() ([]byte, []int) {
	return file_api_hrm_v1_overtime_proto_rawDescGZIP(), []int{14}
}

func (x *RejectOvertimeRequest) GetOvertimeId() string {
	if x != nil {
		return x.OvertimeId
	}
	return ""
}

func (x *RejectOvertimeRequest) GetApproverId() string {
	if x != nil {
		return x.ApproverId
	}
	return ""
}

func (x *RejectOvertimeRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type RejectOvertimeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RejectOvertimeResponse) Reset() {
	*x = RejectOvertimeResponse{}
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RejectOvertimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectOvertimeResponse) ProtoMessage() {}

func (x *RejectOvertimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectOvertimeResponse.ProtoReflect.Descriptor instead.
func (*RejectOvertimeResponse) Descriptor() ([]byte, []int) {
	return file_api_hrm_v1_overtime_proto_rawDescGZIP(), []int{15}
}

func (x *RejectOvertimeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RejectOvertimeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 统计员工加班时长
type SumOvertimeHoursRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	EmployeeId    string                 `protobuf:"bytes,2,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SumOvertimeHoursRequest) Reset() {
	*x = SumOvertimeHoursRequest{}
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SumOvertimeHoursRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SumOvertimeHoursRequest) ProtoMessage() {}

func (x *SumOvertimeHoursRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SumOvertimeHoursRequest.ProtoReflect.Descriptor instead.
func (*SumOvertimeHoursRequest) Descriptor() ([]byte, []int) {
	return file_api_hrm_v1_overtime_proto_rawDescGZIP(), []int{16}
}

func (x *SumOvertimeHoursRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *SumOvertimeHoursRequest) GetEmployeeId() string {
	if x != nil {
		return x.EmployeeId
	}
	return ""
}

func (x *SumOvertimeHoursRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *SumOvertimeHoursRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type SumOvertimeHoursResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalHours    float64                `protobuf:"fixed64,1,opt,name=total_hours,json=totalHours,proto3" json:"total_hours,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SumOvertimeHoursResponse) Reset() {
	*x = SumOvertimeHoursResponse{}
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SumOvertimeHoursResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SumOvertimeHoursResponse) ProtoMessage() {}

func (x *SumOvertimeHoursResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SumOvertimeHoursResponse.ProtoReflect.Descriptor instead.
func (*SumOvertimeHoursResponse) Descriptor() ([]byte, []int) {
	return file_api_hrm_v1_overtime_proto_rawDescGZIP(), []int{17}
}

func (x *SumOvertimeHoursResponse) GetTotalHours() float64 {
	if x != nil {
		return x.TotalHours
	}
	return 0
}

// 统计可调休天数
type GetCompOffDaysRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	EmployeeId    string                 `protobuf:"bytes,2,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCompOffDaysRequest) Reset() {
	*x = GetCompOffDaysRequest{}
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCompOffDaysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompOffDaysRequest) ProtoMessage() {}

func (x *GetCompOffDaysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompOffDaysRequest.ProtoReflect.Descriptor instead.
func (*GetCompOffDaysRequest) Descriptor() ([]byte, []int) {
	return file_api_hrm_v1_overtime_proto_rawDescGZIP(), []int{18}
}

func (x *GetCompOffDaysRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *GetCompOffDaysRequest) GetEmployeeId() string {
	if x != nil {
		return x.EmployeeId
	}
	return ""
}

type GetCompOffDaysResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AvailableDays float64                `protobuf:"fixed64,1,opt,name=available_days,json=availableDays,proto3" json:"available_days,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCompOffDaysResponse) Reset() {
	*x = GetCompOffDaysResponse{}
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCompOffDaysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompOffDaysResponse) ProtoMessage() {}

func (x *GetCompOffDaysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompOffDaysResponse.ProtoReflect.Descriptor instead.
func (*GetCompOffDaysResponse) Descriptor() ([]byte, []int) {
	return file_api_hrm_v1_overtime_proto_rawDescGZIP(), []int{19}
}

func (x *GetCompOffDaysResponse) GetAvailableDays() float64 {
	if x != nil {
		return x.AvailableDays
	}
	return 0
}

// 使用调休
type UseCompOffDaysRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	EmployeeId    string                 `protobuf:"bytes,2,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	Days          float64                `protobuf:"fixed64,3,opt,name=days,proto3" json:"days,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UseCompOffDaysRequest) Reset() {
	*x = UseCompOffDaysRequest{}
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UseCompOffDaysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseCompOffDaysRequest) ProtoMessage() {}

func (x *UseCompOffDaysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseCompOffDaysRequest.ProtoReflect.Descriptor instead.
func (*UseCompOffDaysRequest) Descriptor() ([]byte, []int) {
	return file_api_hrm_v1_overtime_proto_rawDescGZIP(), []int{20}
}

func (x *UseCompOffDaysRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *UseCompOffDaysRequest) GetEmployeeId() string {
	if x != nil {
		return x.EmployeeId
	}
	return ""
}

func (x *UseCompOffDaysRequest) GetDays() float64 {
	if x != nil {
		return x.Days
	}
	return 0
}

type UseCompOffDaysResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RemainingDays float64                `protobuf:"fixed64,3,opt,name=remaining_days,json=remainingDays,proto3" json:"remaining_days,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UseCompOffDaysResponse) Reset() {
	*x = UseCompOffDaysResponse{}
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UseCompOffDaysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseCompOffDaysResponse) ProtoMessage() {}

func (x *UseCompOffDaysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_hrm_v1_overtime_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseCompOffDaysResponse.ProtoReflect.Descriptor instead.
func (*UseCompOffDaysResponse) Descriptor() ([]byte, []int) {
	return file_api_hrm_v1_overtime_proto_rawDescGZIP(), []int{21}
}

func (x *UseCompOffDaysResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UseCompOffDaysResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UseCompOffDaysResponse) GetRemainingDays() float64 {
	if x != nil {
		return x.RemainingDays
	}
	return 0
}

var File_api_hrm_v1_overtime_proto protoreflect.FileDescriptor

const file_api_hrm_v1_overtime_proto_rawDesc = "" +
	"\n" +
	"\x19api/hrm/v1/overtime.proto\x12\n" +
	"api.hrm.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x8c\a\n" +
	"\x10OvertimeResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\x12\x1f\n" +
	"\vemployee_id\x18\x03 \x01(\tR\n" +
	"employeeId\x12#\n" +
	"\remployee_name\x18\x04 \x01(\tR\femployeeName\x12#\n" +
	"\rdepartment_id\x18\x05 \x01(\tR\fdepartmentId\x129\n" +
	"\n" +
	"start_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x1a\n" +
	"\bduration\x18\b \x01(\x01R\bduration\x12#\n" +
	"\rovertime_type\x18\t \x01(\tR\fovertimeType\x12\x19\n" +
	"\bpay_type\x18\n" +
	" \x01(\tR\apayType\x12\x19\n" +
	"\bpay_rate\x18\v \x01(\x01R\apayRate\x12\x16\n" +
	"\x06reason\x18\f \x01(\tR\x06reason\x12\x14\n" +
	"\x05tasks\x18\r \x03(\tR\x05tasks\x12'\n" +
	"\x0fapproval_status\x18\x0e \x01(\tR\x0eapprovalStatus\x12\x1f\n" +
	"\vapproved_by\x18\x0f \x01(\tR\n" +
	"approvedBy\x12;\n" +
	"\vapproved_at\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"approvedAt\x12#\n" +
	"\rreject_reason\x18\x11 \x01(\tR\frejectReason\x12\"\n" +
	"\rcomp_off_days\x18\x12 \x01(\x01R\vcompOffDays\x12\"\n" +
	"\rcomp_off_used\x18\x13 \x01(\x01R\vcompOffUsed\x12G\n" +
	"\x12comp_off_expire_at\x18\x14 \x01(\v2\x1a.google.protobuf.TimestampR\x0fcompOffExpireAt\x12\x16\n" +
	"\x06remark\x18\x15 \x01(\tR\x06remark\x129\n" +
	"\n" +
	"created_at\x18\x16 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x17 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xb3\x03\n" +
	"\x15CreateOvertimeRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x1f\n" +
	"\vemployee_id\x18\x02 \x01(\tR\n" +
	"employeeId\x12#\n" +
	"\remployee_name\x18\x03 \x01(\tR\femployeeName\x12#\n" +
	"\rdepartment_id\x18\x04 \x01(\tR\fdepartmentId\x129\n" +
	"\n" +
	"start_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x1a\n" +
	"\bduration\x18\a \x01(\x01R\bduration\x12#\n" +
	"\rovertime_type\x18\b \x01(\tR\fovertimeType\x12\x19\n" +
	"\bpay_type\x18\t \x01(\tR\apayType\x12\x16\n" +
	"\x06reason\x18\n" +
	" \x01(\tR\x06reason\x12\x14\n" +
	"\x05tasks\x18\v \x03(\tR\x05tasks\x12\x16\n" +
	"\x06remark\x18\f \x01(\tR\x06remark\"\xbb\x02\n" +
	"\x15UpdateOvertimeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x129\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x1a\n" +
	"\bduration\x18\x04 \x01(\x01R\bduration\x12#\n" +
	"\rovertime_type\x18\x05 \x01(\tR\fovertimeType\x12\x19\n" +
	"\bpay_type\x18\x06 \x01(\tR\apayType\x12\x16\n" +
	"\x06reason\x18\a \x01(\tR\x06reason\x12\x14\n" +
	"\x05tasks\x18\b \x03(\tR\x05tasks\x12\x16\n" +
	"\x06remark\x18\t \x01(\tR\x06remark\"'\n" +
	"\x15DeleteOvertimeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"L\n" +
	"\x16DeleteOvertimeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"$\n" +
	"\x12GetOvertimeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x84\x03\n" +
	"\x14ListOvertimesRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x1f\n" +
	"\vemployee_id\x18\x02 \x01(\tR\n" +
	"employeeId\x12#\n" +
	"\rdepartment_id\x18\x03 \x01(\tR\fdepartmentId\x12#\n" +
	"\rovertime_type\x18\x04 \x01(\tR\fovertimeType\x12'\n" +
	"\x0fapproval_status\x18\x05 \x01(\tR\x0eapprovalStatus\x129\n" +
	"\n" +
	"start_date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\x12\x18\n" +
	"\akeyword\x18\b \x01(\tR\akeyword\x12\x12\n" +
	"\x04page\x18\t \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\n" +
	" \x01(\x05R\bpageSize\"\x92\x01\n" +
	"\x15ListOvertimesResponse\x122\n" +
	"\x05items\x18\x01 \x03(\v2\x1c.api.hrm.v1.OvertimeResponseR\x05items\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"p\n" +
	"\x1cListEmployeeOvertimesRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x1f\n" +
	"\vemployee_id\x18\x02 \x01(\tR\n" +
	"employeeId\x12\x12\n" +
	"\x04year\x18\x03 \x01(\x05R\x04year\":\n" +
	"\x1bListPendingOvertimesRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\"[\n" +
	"\x15SubmitOvertimeRequest\x12\x1f\n" +
	"\vovertime_id\x18\x01 \x01(\tR\n" +
	"overtimeId\x12!\n" +
	"\fsubmitter_id\x18\x02 \x01(\tR\vsubmitterId\"L\n" +
	"\x16SubmitOvertimeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"Z\n" +
	"\x16ApproveOvertimeRequest\x12\x1f\n" +
	"\vovertime_id\x18\x01 \x01(\tR\n" +
	"overtimeId\x12\x1f\n" +
	"\vapprover_id\x18\x02 \x01(\tR\n" +
	"approverId\"M\n" +
	"\x17ApproveOvertimeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"q\n" +
	"\x15RejectOvertimeRequest\x12\x1f\n" +
	"\vovertime_id\x18\x01 \x01(\tR\n" +
	"overtimeId\x12\x1f\n" +
	"\vapprover_id\x18\x02 \x01(\tR\n" +
	"approverId\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"L\n" +
	"\x16RejectOvertimeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xc9\x01\n" +
	"\x17SumOvertimeHoursRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x1f\n" +
	"\vemployee_id\x18\x02 \x01(\tR\n" +
	"employeeId\x129\n" +
	"\n" +
	"start_date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\";\n" +
	"\x18SumOvertimeHoursResponse\x12\x1f\n" +
	"\vtotal_hours\x18\x01 \x01(\x01R\n" +
	"totalHours\"U\n" +
	"\x15GetCompOffDaysRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x1f\n" +
	"\vemployee_id\x18\x02 \x01(\tR\n" +
	"employeeId\"?\n" +
	"\x16GetCompOffDaysResponse\x12%\n" +
	"\x0eavailable_days\x18\x01 \x01(\x01R\ravailableDays\"i\n" +
	"\x15UseCompOffDaysRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x1f\n" +
	"\vemployee_id\x18\x02 \x01(\tR\n" +
	"employeeId\x12\x12\n" +
	"\x04days\x18\x03 \x01(\x01R\x04days\"s\n" +
	"\x16UseCompOffDaysResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12%\n" +
	"\x0eremaining_days\x18\x03 \x01(\x01R\rremainingDays2\x91\x0e\n" +
	"\x0fOvertimeService\x12s\n" +
	"\x0eCreateOvertime\x12!.api.hrm.v1.CreateOvertimeRequest\x1a\x1c.api.hrm.v1.OvertimeResponse\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/api/v1/hrm/overtimes\x12x\n" +
	"\x0eUpdateOvertime\x12!.api.hrm.v1.UpdateOvertimeRequest\x1a\x1c.api.hrm.v1.OvertimeResponse\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\x1a\x1a/api/v1/hrm/overtimes/{id}\x12{\n" +
	"\x0eDeleteOvertime\x12!.api.hrm.v1.DeleteOvertimeRequest\x1a\".api.hrm.v1.DeleteOvertimeResponse\"\"\x82\xd3\xe4\x93\x02\x1c*\x1a/api/v1/hrm/overtimes/{id}\x12o\n" +
	"\vGetOvertime\x12\x1e.api.hrm.v1.GetOvertimeRequest\x1a\x1c.api.hrm.v1.OvertimeResponse\"\"\x82\xd3\xe4\x93\x02\x1c\x12\x1a/api/v1/hrm/overtimes/{id}\x12s\n" +
	"\rListOvertimes\x12 .api.hrm.v1.ListOvertimesRequest\x1a!.api.hrm.v1.ListOvertimesResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/api/v1/hrm/overtimes\x12\x9b\x01\n" +
	"\x15ListEmployeeOvertimes\x12(.api.hrm.v1.ListEmployeeOvertimesRequest\x1a!.api.hrm.v1.ListOvertimesResponse\"5\x82\xd3\xe4\x93\x02/\x12-/api/v1/hrm/employees/{employee_id}/overtimes\x12\x89\x01\n" +
	"\x14ListPendingOvertimes\x12'.api.hrm.v1.ListPendingOvertimesRequest\x1a!.api.hrm.v1.ListOvertimesResponse\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/api/v1/hrm/overtimes/pending\x12\x8e\x01\n" +
	"\x0eSubmitOvertime\x12!.api.hrm.v1.SubmitOvertimeRequest\x1a\".api.hrm.v1.SubmitOvertimeResponse\"5\x82\xd3\xe4\x93\x02/:\x01*\"*/api/v1/hrm/overtimes/{overtime_id}/submit\x12\x92\x01\n" +
	"\x0fApproveOvertime\x12\".api.hrm.v1.ApproveOvertimeRequest\x1a#.api.hrm.v1.ApproveOvertimeResponse\"6\x82\xd3\xe4\x93\x020:\x01*\"+/api/v1/hrm/overtimes/{overtime_id}/approve\x12\x8e\x01\n" +
	"\x0eRejectOvertime\x12!.api.hrm.v1.RejectOvertimeRequest\x1a\".api.hrm.v1.RejectOvertimeResponse\"5\x82\xd3\xe4\x93\x02/:\x01*\"*/api/v1/hrm/overtimes/{overtime_id}/reject\x12\x99\x01\n" +
	"\x10SumOvertimeHours\x12#.api.hrm.v1.SumOvertimeHoursRequest\x1a$.api.hrm.v1.SumOvertimeHoursResponse\":\x82\xd3\xe4\x93\x024\x122/api/v1/hrm/employees/{employee_id}/overtime-hours\x12\x92\x01\n" +
	"\x0eGetCompOffDays\x12!.api.hrm.v1.GetCompOffDaysRequest\x1a\".api.hrm.v1.GetCompOffDaysResponse\"9\x82\xd3\xe4\x93\x023\x121/api/v1/hrm/employees/{employee_id}/comp-off-days\x12\x99\x01\n" +
	"\x0eUseCompOffDays\x12!.api.hrm.v1.UseCompOffDaysRequest\x1a\".api.hrm.v1.UseCompOffDaysResponse\"@\x82\xd3\xe4\x93\x02::\x01*\"5/api/v1/hrm/employees/{employee_id}/comp-off-days/useB\x9f\x01\n" +
	"\x0ecom.api.hrm.v1B\rOvertimeProtoP\x01Z4github.com/lk2023060901/go-next-erp/api/hrm/v1;hrmv1\xa2\x02\x03AHX\xaa\x02\n" +
	"Api.Hrm.V1\xca\x02\n" +
	"Api\\Hrm\\V1\xe2\x02\x16Api\\Hrm\\V1\\GPBMetadata\xea\x02\fApi::Hrm::V1b\x06proto3"

var (
	file_api_hrm_v1_overtime_proto_rawDescOnce sync.Once
	file_api_hrm_v1_overtime_proto_rawDescData []byte
)

func file_api_hrm_v1_overtime_proto_rawDescGZIP() []byte {
	file_api_hrm_v1_overtime_proto_rawDescOnce.Do(func() {
		file_api_hrm_v1_overtime_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_hrm_v1_overtime_proto_rawDesc), len(file_api_hrm_v1_overtime_proto_rawDesc)))
	})
	return file_api_hrm_v1_overtime_proto_rawDescData
}

var file_api_hrm_v1_overtime_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_api_hrm_v1_overtime_proto_goTypes = []any{
	(*OvertimeResponse)(nil),             // 0: api.hrm.v1.OvertimeResponse
	(*CreateOvertimeRequest)(nil),        // 1: api.hrm.v1.CreateOvertimeRequest
	(*UpdateOvertimeRequest)(nil),        // 2: api.hrm.v1.UpdateOvertimeRequest
	(*DeleteOvertimeRequest)(nil),        // 3: api.hrm.v1.DeleteOvertimeRequest
	(*DeleteOvertimeResponse)(nil),       // 4: api.hrm.v1.DeleteOvertimeResponse
	(*GetOvertimeRequest)(nil),           // 5: api.hrm.v1.GetOvertimeRequest
	(*ListOvertimesRequest)(nil),         // 6: api.hrm.v1.ListOvertimesRequest
	(*ListOvertimesResponse)(nil),        // 7: api.hrm.v1.ListOvertimesResponse
	(*ListEmployeeOvertimesRequest)(nil), // 8: api.hrm.v1.ListEmployeeOvertimesRequest
	(*ListPendingOvertimesRequest)(nil),  // 9: api.hrm.v1.ListPendingOvertimesRequest
	(*SubmitOvertimeRequest)(nil),        // 10: api.hrm.v1.SubmitOvertimeRequest
	(*SubmitOvertimeResponse)(nil),       // 11: api.hrm.v1.SubmitOvertimeResponse
	(*ApproveOvertimeRequest)(nil),       // 12: api.hrm.v1.ApproveOvertimeRequest
	(*ApproveOvertimeResponse)(nil),      // 13: api.hrm.v1.ApproveOvertimeResponse
	(*RejectOvertimeRequest)(nil),        // 14: api.hrm.v1.RejectOvertimeRequest
	(*RejectOvertimeResponse)(nil),       // 15: api.hrm.v1.RejectOvertimeResponse
	(*SumOvertimeHoursRequest)(nil),      // 16: api.hrm.v1.SumOvertimeHoursRequest
	(*SumOvertimeHoursResponse)(nil),     // 17: api.hrm.v1.SumOvertimeHoursResponse
	(*GetCompOffDaysRequest)(nil),        // 18: api.hrm.v1.GetCompOffDaysRequest
	(*GetCompOffDaysResponse)(nil),       // 19: api.hrm.v1.GetCompOffDaysResponse
	(*UseCompOffDaysRequest)(nil),        // 20: api.hrm.v1.UseCompOffDaysRequest
	(*UseCompOffDaysResponse)(nil),       // 21: api.hrm.v1.UseCompOffDaysResponse
	(*timestamppb.Timestamp)(nil),        // 22: google.protobuf.Timestamp
}
var file_api_hrm_v1_overtime_proto_depIdxs = []int32{
	22, // 0: api.hrm.v1.OvertimeResponse.start_time:type_name -> google.protobuf.Timestamp
	22, // 1: api.hrm.v1.OvertimeResponse.end_time:type_name -> google.protobuf.Timestamp
	22, // 2: api.hrm.v1.OvertimeResponse.approved_at:type_name -> google.protobuf.Timestamp
	22, // 3: api.hrm.v1.OvertimeResponse.comp_off_expire_at:type_name -> google.protobuf.Timestamp
	22, // 4: api.hrm.v1.OvertimeResponse.created_at:type_name -> google.protobuf.Timestamp
	22, // 5: api.hrm.v1.OvertimeResponse.updated_at:type_name -> google.protobuf.Timestamp
	22, // 6: api.hrm.v1.CreateOvertimeRequest.start_time:type_name -> google.protobuf.Timestamp
	22, // 7: api.hrm.v1.CreateOvertimeRequest.end_time:type_name -> google.protobuf.Timestamp
	22, // 8: api.hrm.v1.UpdateOvertimeRequest.start_time:type_name -> google.protobuf.Timestamp
	22, // 9: api.hrm.v1.UpdateOvertimeRequest.end_time:type_name -> google.protobuf.Timestamp
	22, // 10: api.hrm.v1.ListOvertimesRequest.start_date:type_name -> google.protobuf.Timestamp
	22, // 11: api.hrm.v1.ListOvertimesRequest.end_date:type_name -> google.protobuf.Timestamp
	0,  // 12: api.hrm.v1.ListOvertimesResponse.items:type_name -> api.hrm.v1.OvertimeResponse
	22, // 13: api.hrm.v1.SumOvertimeHoursRequest.start_date:type_name -> google.protobuf.Timestamp
	22, // 14: api.hrm.v1.SumOvertimeHoursRequest.end_date:type_name -> google.protobuf.Timestamp
	1,  // 15: api.hrm.v1.OvertimeService.CreateOvertime:input_type -> api.hrm.v1.CreateOvertimeRequest
	2,  // 16: api.hrm.v1.OvertimeService.UpdateOvertime:input_type -> api.hrm.v1.UpdateOvertimeRequest
	3,  // 17: api.hrm.v1.OvertimeService.DeleteOvertime:input_type -> api.hrm.v1.DeleteOvertimeRequest
	5,  // 18: api.hrm.v1.OvertimeService.GetOvertime:input_type -> api.hrm.v1.GetOvertimeRequest
	6,  // 19: api.hrm.v1.OvertimeService.ListOvertimes:input_type -> api.hrm.v1.ListOvertimesRequest
	8,  // 20: api.hrm.v1.OvertimeService.ListEmployeeOvertimes:input_type -> api.hrm.v1.ListEmployeeOvertimesRequest
	9,  // 21: api.hrm.v1.OvertimeService.ListPendingOvertimes:input_type -> api.hrm.v1.ListPendingOvertimesRequest
	10, // 22: api.hrm.v1.OvertimeService.SubmitOvertime:input_type -> api.hrm.v1.SubmitOvertimeRequest
	12, // 23: api.hrm.v1.OvertimeService.ApproveOvertime:input_type -> api.hrm.v1.ApproveOvertimeRequest
	14, // 24: api.hrm.v1.OvertimeService.RejectOvertime:input_type -> api.hrm.v1.RejectOvertimeRequest
	16, // 25: api.hrm.v1.OvertimeService.SumOvertimeHours:input_type -> api.hrm.v1.SumOvertimeHoursRequest
	18, // 26: api.hrm.v1.OvertimeService.GetCompOffDays:input_type -> api.hrm.v1.GetCompOffDaysRequest
	20, // 27: api.hrm.v1.OvertimeService.UseCompOffDays:input_type -> api.hrm.v1.UseCompOffDaysRequest
	0,  // 28: api.hrm.v1.OvertimeService.CreateOvertime:output_type -> api.hrm.v1.OvertimeResponse
	0,  // 29: api.hrm.v1.OvertimeService.UpdateOvertime:output_type -> api.hrm.v1.OvertimeResponse
	4,  // 30: api.hrm.v1.OvertimeService.DeleteOvertime:output_type -> api.hrm.v1.DeleteOvertimeResponse
	0,  // 31: api.hrm.v1.OvertimeService.GetOvertime:output_type -> api.hrm.v1.OvertimeResponse
	7,  // 32: api.hrm.v1.OvertimeService.ListOvertimes:output_type -> api.hrm.v1.ListOvertimesResponse
	7,  // 33: api.hrm.v1.OvertimeService.ListEmployeeOvertimes:output_type -> api.hrm.v1.ListOvertimesResponse
	7,  // 34: api.hrm.v1.OvertimeService.ListPendingOvertimes:output_type -> api.hrm.v1.ListOvertimesResponse
	11, // 35: api.hrm.v1.OvertimeService.SubmitOvertime:output_type -> api.hrm.v1.SubmitOvertimeResponse
	13, // 36: api.hrm.v1.OvertimeService.ApproveOvertime:output_type -> api.hrm.v1.ApproveOvertimeResponse
	15, // 37: api.hrm.v1.OvertimeService.RejectOvertime:output_type -> api.hrm.v1.RejectOvertimeResponse
	17, // 38: api.hrm.v1.OvertimeService.SumOvertimeHours:output_type -> api.hrm.v1.SumOvertimeHoursResponse
	19, // 39: api.hrm.v1.OvertimeService.GetCompOffDays:output_type -> api.hrm.v1.GetCompOffDaysResponse
	21, // 40: api.hrm.v1.OvertimeService.UseCompOffDays:output_type -> api.hrm.v1.UseCompOffDaysResponse
	28, // [28:41] is the sub-list for method output_type
	15, // [15:28] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_api_hrm_v1_overtime_proto_init() }
func file_api_hrm_v1_overtime_proto_init() {
	if File_api_hrm_v1_overtime_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_hrm_v1_overtime_proto_rawDesc), len(file_api_hrm_v1_overtime_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_hrm_v1_overtime_proto_goTypes,
		DependencyIndexes: file_api_hrm_v1_overtime_proto_depIdxs,
		MessageInfos:      file_api_hrm_v1_overtime_proto_msgTypes,
	}.Build()
	File_api_hrm_v1_overtime_proto = out.File
	file_api_hrm_v1_overtime_proto_goTypes = nil
	file_api_hrm_v1_overtime_proto_depIdxs = nil
}
