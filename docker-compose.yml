version: '3.8'

services:
  # PostgreSQL 数据库
  erp-postgres:
    image: postgres:16-alpine
    container_name: erp-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: erp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
      TZ: Asia/Shanghai
    ports:
      - "15000:5432"
    volumes:
      - erp-postgres-data:/var/lib/postgresql/data
    networks:
      - erp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 缓存（单机模式）
  erp-redis:
    image: redis:7-alpine
    container_name: erp-redis
    restart: unless-stopped
    command: redis-server --requirepass redis123 --appendonly yes
    ports:
      - "15001:6379"
    volumes:
      - erp-redis-data:/data
    networks:
      - erp-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO 对象存储
  erp-minio:
    image: minio/minio:latest
    container_name: erp-minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
      TZ: Asia/Shanghai
    ports:
      - "15002:9000"  # API 端口
      - "15003:9001"  # Console 控制台端口
    volumes:
      - erp-minio-data:/data
    networks:
      - erp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Milvus etcd
  erp-milvus-etcd:
    image: quay.io/coreos/etcd:v3.5.5
    container_name: erp-milvus-etcd
    restart: unless-stopped
    environment:
      ETCD_AUTO_COMPACTION_MODE: revision
      ETCD_AUTO_COMPACTION_RETENTION: "1000"
      ETCD_QUOTA_BACKEND_BYTES: "4294967296"
      ETCD_SNAPSHOT_COUNT: "50000"
    volumes:
      - erp-milvus-etcd-data:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    networks:
      - erp-network
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Milvus MinIO（Milvus 专用存储）
  erp-milvus-minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    container_name: erp-milvus-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - erp-milvus-minio-data:/minio_data
    command: minio server /minio_data --console-address ":9001"
    networks:
      - erp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Milvus 向量数据库
  erp-milvus:
    image: milvusdb/milvus:v2.3.3
    container_name: erp-milvus
    restart: unless-stopped
    environment:
      ETCD_ENDPOINTS: erp-milvus-etcd:2379
      MINIO_ADDRESS: erp-milvus-minio:9000
      TZ: Asia/Shanghai
    volumes:
      - erp-milvus-data:/var/lib/milvus
    ports:
      - "15004:19530"  # gRPC API 端口
      - "15005:9091"   # Metrics 端口
    networks:
      - erp-network
    depends_on:
      erp-milvus-etcd:
        condition: service_healthy
      erp-milvus-minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  erp-network:
    driver: bridge
    name: erp-network

volumes:
  erp-postgres-data:
    name: erp-postgres-data
  erp-redis-data:
    name: erp-redis-data
  erp-minio-data:
    name: erp-minio-data
  erp-milvus-etcd-data:
    name: erp-milvus-etcd-data
  erp-milvus-minio-data:
    name: erp-milvus-minio-data
  erp-milvus-data:
    name: erp-milvus-data
